{"ast":null,"code":"var _jsxFileName = \"/home/stefan/repos/memory-card/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport Scoreboard from './components/scoreboard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleCallback = childData => {\n      this.setState({\n        cardId: childData\n      });\n      console.log(childData);\n      this.getCards();\n    };\n\n    this.state = {\n      cards: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9],\n      cardsUI: [],\n      id: 0,\n      cardId: 0,\n      clicks: [],\n      gameOver: false,\n      highScore: 0,\n      score: 0\n    };\n    this.getCards = this.getCards.bind(this);\n    this.checkValue = this.checkValue.bind(this);\n    this.handleCallback = this.handleCallback.bind(this);\n  } //the function will randomise cards array on button click\n\n\n  checkValue() {\n    console.log(this.state.cardId);\n  }\n\n  getCards() {\n    let array = this.state.cards;\n    console.log(array);\n    let i = array.length - 1;\n\n    for (; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      const temp = array[i];\n      array[i] = array[j];\n      array[j] = temp;\n    }\n\n    let uis = []; //creates cards in a random order and then pushes them in an array\n\n    array.forEach(item => {\n      uis.push( /*#__PURE__*/_jsxDEV(Card, {\n        id: item,\n        parentCallback: this.handleCallback,\n        data: this.state.cardId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 14\n      }, this));\n    });\n    this.setState({\n      cardUI: uis\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: this.checkValue,\n        children: \"Check\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: this.getCards,\n        children: \"Shuffle cards\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(Scoreboard, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cardsContainer\",\n        children: this.state.cardUI\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 4\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nclass Card extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: 'cat',\n      cardId: this.props.id\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    this.props.parentCallback(this.state.cardId);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: this.state.id,\n      className: \"cardContainer\",\n      onClick: this.handleClick,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"imageContainer\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: `./imgs/cat${this.props.id}.jpg`,\n          alt: \"Cat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cardName\",\n        children: `${this.state.name} ${this.props.id}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nexport { Card };\nexport default App;","map":{"version":3,"names":["React","useState","useEffect","Scoreboard","App","Component","constructor","props","handleCallback","childData","setState","cardId","console","log","getCards","state","cards","cardsUI","id","clicks","gameOver","highScore","score","bind","checkValue","array","i","length","j","Math","floor","random","temp","uis","forEach","item","push","cardUI","render","Card","name","handleClick","parentCallback"],"sources":["/home/stefan/repos/memory-card/src/App.js"],"sourcesContent":["import React, {useState, useEffect} from 'react';\nimport Scoreboard from './components/scoreboard'\n\nclass App extends React.Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      cards: [0,1,2,3,4,5,6,7,8,9],\n      cardsUI: [],\n      id: 0,\n      cardId: 0,\n      clicks: [],\n      gameOver: false,\n      highScore: 0,\n      score: 0\n    }\n    this.getCards = this.getCards.bind(this)\n    this.checkValue = this.checkValue.bind(this)\n    this.handleCallback = this.handleCallback.bind(this)\n  }\n  \n  //the function will randomise cards array on button click\n  checkValue(){\n    console.log(this.state.cardId)\n  }\n  handleCallback = (childData) =>{\n    this.setState({cardId: childData})\n    console.log(childData)\n    this.getCards()\n\n  }\n\n  getCards(){\n    let array = this.state.cards\n    console.log(array)\n    let i = array.length - 1;\n  for (; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    const temp = array[i];\n    array[i] = array[j];\n    array[j] = temp;\n  }\n\n  let uis = [];\n  //creates cards in a random order and then pushes them in an array\n  array.forEach((item)=>{\n    uis.push(<Card id={item} parentCallback = {this.handleCallback} data={this.state.cardId}/>)\n  })\n  this.setState({cardUI: uis})\n\n\n  \n  }\n\n\n\n\n  render(){\n return(\n   <div className='content'>\n   <button type='button' onClick={this.checkValue}>Check</button>\n  <button type='button' onClick={this.getCards}>Shuffle cards</button>\n   <Scoreboard />\n   <div className='cardsContainer'>\n    {this.state.cardUI}\n   </div>\n   \n   </div>\n )}\n}\n\nclass Card extends React.Component{\n  constructor(props){\n    super(props)\n    this.state = {\n      name: 'cat',\n      cardId: this.props.id,\n    }\n    this.handleClick = this.handleClick.bind(this)\n  }\n\n  handleClick(){\n    this.props.parentCallback(this.state.cardId);\n  }\n  render(){\n  return (\n    <div id={this.state.id} className='cardContainer' onClick={this.handleClick}>\n        <div className='imageContainer'>\n            <img src={`./imgs/cat${this.props.id}.jpg`} alt=\"Cat\" />\n        </div>\n        <div className='cardName'>{`${this.state.name} ${this.props.id}`}</div>\n    </div>\n)}\n}\nexport {Card};\n\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}