{"ast":null,"code":"var _jsxFileName = \"/home/stefan/repos/memory-card/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Scoreboard from './components/scoreboard';\nimport Card from './components/card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [cards, setCards] = useState([0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  const [cardsUI, setCardsUI] = useState([]);\n  const [id, setId] = useState(0); //the function will randomise cards array on button click\n\n  const childToParent = childData => {\n    setId(childData);\n  };\n\n  const getCards = () => {\n    let array = cards;\n    let i = array.length - 1;\n\n    for (; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      const temp = array[i];\n      array[i] = array[j];\n      array[j] = temp;\n    }\n\n    let uis = []; //creates cards in a random order and then pushes them in an array\n\n    array.forEach(item => {\n      uis.push( /*#__PURE__*/_jsxDEV(Card, {\n        id: item,\n        gchildToParent: childToParent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 14\n      }, this));\n    });\n    setCardsUI(uis);\n    console.log(cards, uis);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"content\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: getCards,\n      children: \"Shuffle cards\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(Scoreboard, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cardsContainer\",\n      children: cardsUI\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 4\n  }, this);\n}\n\n_s(App, \"vXRJ+j59ZGIGYOu45b9AjcruRCw=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Scoreboard","Card","App","cards","setCards","cardsUI","setCardsUI","id","setId","childToParent","childData","getCards","array","i","length","j","Math","floor","random","temp","uis","forEach","item","push","console","log"],"sources":["/home/stefan/repos/memory-card/src/App.js"],"sourcesContent":["import React, {useState, useEffect} from 'react';\nimport Scoreboard from './components/scoreboard'\nimport Card from './components/card'\n\nfunction App() {\n  const [cards, setCards] = useState([0,1,2,3,4,5,6,7,8,9])\n  const [cardsUI,setCardsUI] = useState([])\n  const [id, setId] = useState(0)\n  //the function will randomise cards array on button click\n    const childToParent = (childData) =>{\n      setId(childData)\n    }\n  const getCards = () =>{\n    let array = cards\n    let i = array.length - 1;\n  for (; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    const temp = array[i];\n    array[i] = array[j];\n    array[j] = temp;\n  }\n\n  let uis = [];\n  //creates cards in a random order and then pushes them in an array\n  array.forEach((item)=>{\n    uis.push(<Card id={item} gchildToParent={childToParent}/>)\n  })\n\n\n\n  setCardsUI(uis);\n  console.log(cards, uis)\n  }\n\n\n\n\n\n return(\n   <div className='content'>\n  <button type='button' onClick={getCards}>Shuffle cards</button>\n   <Scoreboard />\n   <div className='cardsContainer'>\n\n   {cardsUI}\n   </div>\n   \n   </div>\n )\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,EAAW,CAAX,EAAa,CAAb,EAAe,CAAf,EAAiB,CAAjB,EAAmB,CAAnB,CAAD,CAAlC;EACA,MAAM,CAACO,OAAD,EAASC,UAAT,IAAuBR,QAAQ,CAAC,EAAD,CAArC;EACA,MAAM,CAACS,EAAD,EAAKC,KAAL,IAAcV,QAAQ,CAAC,CAAD,CAA5B,CAHa,CAIb;;EACE,MAAMW,aAAa,GAAIC,SAAD,IAAc;IAClCF,KAAK,CAACE,SAAD,CAAL;EACD,CAFD;;EAGF,MAAMC,QAAQ,GAAG,MAAK;IACpB,IAAIC,KAAK,GAAGT,KAAZ;IACA,IAAIU,CAAC,GAAGD,KAAK,CAACE,MAAN,GAAe,CAAvB;;IACF,OAAOD,CAAC,GAAG,CAAX,EAAcA,CAAC,EAAf,EAAmB;MACjB,MAAME,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBL,CAAC,GAAG,CAArB,CAAX,CAAV;MACA,MAAMM,IAAI,GAAGP,KAAK,CAACC,CAAD,CAAlB;MACAD,KAAK,CAACC,CAAD,CAAL,GAAWD,KAAK,CAACG,CAAD,CAAhB;MACAH,KAAK,CAACG,CAAD,CAAL,GAAWI,IAAX;IACD;;IAED,IAAIC,GAAG,GAAG,EAAV,CAVsB,CAWtB;;IACAR,KAAK,CAACS,OAAN,CAAeC,IAAD,IAAQ;MACpBF,GAAG,CAACG,IAAJ,eAAS,QAAC,IAAD;QAAM,EAAE,EAAED,IAAV;QAAgB,cAAc,EAAEb;MAAhC;QAAA;QAAA;QAAA;MAAA,QAAT;IACD,CAFD;IAMAH,UAAU,CAACc,GAAD,CAAV;IACAI,OAAO,CAACC,GAAR,CAAYtB,KAAZ,EAAmBiB,GAAnB;EACC,CApBD;;EA0BD,oBACE;IAAK,SAAS,EAAC,SAAf;IAAA,wBACD;MAAQ,IAAI,EAAC,QAAb;MAAsB,OAAO,EAAET,QAA/B;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADC,eAEA,QAAC,UAAD;MAAA;MAAA;MAAA;IAAA,QAFA,eAGA;MAAK,SAAS,EAAC,gBAAf;MAAA,UAECN;IAFD;MAAA;MAAA;MAAA;IAAA,QAHA;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAWA;;GA7CQH,G;;KAAAA,G;AA+CT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}